# todo: figure out how string interpolation works for matrix definition
env:
  APP_NAME: tumpr
  ENVIRONMENT: dev

name: Build Backend
run-name: backend-build-${{ github.actor }}
on: [push]
jobs:
  Lint:
    runs-on:
      ubuntu-latest
    env:
      working-directory: ./lambdas
    steps:
    -
      name: checkout
      uses: actions/checkout@v4
    -
      name: Set up python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    -
      name: Install Poetry
      uses: snok/install-poetry@v1
    -
      name: install dependencies
      run: poetry install --no-interaction
    -
      name: lint
      run: |
        poetry run ruff
        poetry run ruff-format
        poetry run mypy

  Build:
    needs: Lint
    strategy:
      matrix:
        lambda_name: ["backend_api", dummy_lambda]
    runs-on: ubuntu-latest
    steps:
      -
        name: checkout
        uses: actions/checkout@v4
      -
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      -
        name: Build and push Docker image
        run: |
          make build_and_push_docker_image \
            region=${{vars.AWS_REGION}} \
            account_id=${{secrets.ACCOUNT_ID}} \
            prefix=${{env.APP_NAME}}-${{env.ENVIRONMENT}}- \
            lambda_name=${{matrix.lambda_name}} \
            build_no=${{github.run_id}}
      -
        name: Update Lambda function
        run: |
          make update_lambda_with_latest_image \
            prefix=${{env.APP_NAME}}-${{env.ENVIRONMENT}}- \
            lambda_name=${{matrix.lambda_name}} \
            account_id=${{secrets.account_id}} \
            region=${{vars.AWS_REGION}}
